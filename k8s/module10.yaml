apiVersion: v1
kind: ConfigMap
metadata:
  name: httpserver
  namespace: httpserver
data:
  server_port: "8080"
  log_file: "/logs/http_server.log"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpserver-deployment
  namespace: httpserver
  labels:
    app: httpserver
spec:
  selector:
    matchLabels:
      app: httpserver
  # Availability
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 10
  # Template Section
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
      labels:
        app: httpserver
    spec:
      # Gracefully Stop
      terminationGracePeriodSeconds: 10

      # logs
      volumes:
      - name: log-volume
        emptyDir: {}

      # Containers
      containers:
      - name: httpserver
        image: tonylixu/go_http_server:v1.11
        volumeMounts:
        - mountPath: /logs
          name: log-volume
        env:
        - name: HTTP_SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: httpserver
              key: server_port
        - name: LOG_FILE
          valueFrom:
            configMapKeyRef:
              name: httpserver
              key: log_file
        args: ["-port", "$(HTTP_SERVER_PORT)", "-log", "$(LOG_FILE)"]
        ports:
          - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        livenessProbe:
          exec:
            command:
            - cat
            - /tmp/live
          initialDelaySeconds: 3
          periodSeconds: 3
        startupProbe:
          httpGet:
            path: /healthz
            port: 8080
          # One minute startup finish
          failureThreshold: 6
          periodSeconds: 10
        # QoS Section
        resources:
          limits:
            cpu: 400m
            memory: 500Mi
          requests:
            cpu: 200m
            memory: 200Mi
---
apiVersion: v1
kind: Service
metadata:
  name: httpserver-service
  namespace: httpserver
spec:
  selector:
    app: httpserver
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
